---
micronaut:
  application:
    name: simple-rest-streamer


---

kafka:
  bootstrap:
#    servers: ${KAFKA_BROKER}
    servers: http://localhost:9092

  application.id: ${micronaut.application.name}-${random.int}
  #application.id: validator-streamer--1695807200
  client.id: ${micronaut.application.name}
  commit.interval.ms: 1000
  auto.offset.reset: earliest

  default:
    deserialization:
      exception:
        handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
    key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
    value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#      key.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
#      value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde

#  consumers:
#    #schema.registry.url: ${APP_SCHEMA_REGISTRY_URL}
#    schema.registry.url: http://localhost:8082
#
#  streams:
#    default:
#      num.stream.threads: 1
#      group.id: ${kafka.application.id}
#      #schema.registry.url: ${APP_SCHEMA_REGISTRY_URL}
#      schema.registry.url: http://localhost:8082

app:
  id: ${kafka.application.id}
  incomingtopic: topic_in_json #${APP_INCOMING_TOPIC}
  outgoingtopic: topic_out_json #${APP_OUTGOING_TOPIC}
  serviceurl: http://localhost:10005/translate/eip-to-legacy #${SERVICE_URL}


